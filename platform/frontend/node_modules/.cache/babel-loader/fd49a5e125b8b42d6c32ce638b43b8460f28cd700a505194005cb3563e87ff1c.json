{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'';// Create axios instance\nconst apiClient=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Add auth token to requests\napiClient.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;});// Handle token expiration\napiClient.interceptors.response.use(response=>response,error=>{var _error$response;if(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401){localStorage.removeItem('token');window.location.href='/';}return Promise.reject(error);});// Auth API\nexport const authApi={login:async credentials=>{const response=await apiClient.post('/api/auth/login',credentials);return response.data;},verifyToken:async()=>{const response=await apiClient.post('/api/auth/verify');return response.data;}};// Workshop API\nexport const workshopApi={getWorkshops:async params=>{const response=await apiClient.get('/api/workshops',{params});return response.data;},getWorkshop:async id=>{const response=await apiClient.get(`/api/workshops/${id}`);return response.data;},createWorkshop:async workshop=>{const response=await apiClient.post('/api/workshops',workshop);return response.data;},updateWorkshop:async(id,workshop)=>{const response=await apiClient.put(`/api/workshops/${id}`,workshop);return response.data;},deleteWorkshop:async id=>{await apiClient.delete(`/api/workshops/${id}`);},deployWorkshop:async id=>{const response=await apiClient.post(`/api/workshops/${id}/deploy`);return response.data;},cleanupWorkshop:async id=>{const response=await apiClient.delete(`/api/workshops/${id}/resources`);return response.data;},checkWorkshopStatus:async id=>{const response=await apiClient.get(`/api/workshops/${id}/status-check`);return response.data;}};// Attendee API\nexport const attendeeApi={getWorkshopAttendees:async workshopId=>{const response=await apiClient.get(`/api/attendees/workshop/${workshopId}`);return response.data;},getAttendee:async id=>{const response=await apiClient.get(`/api/attendees/${id}`);return response.data;},createAttendee:async(workshopId,attendee)=>{const response=await apiClient.post(`/api/attendees/`,attendee,{params:{workshop_id:workshopId}});return response.data;},deleteAttendee:async id=>{await apiClient.delete(`/api/attendees/${id}`);},getAttendeeCredentials:async id=>{const response=await apiClient.get(`/api/attendees/${id}/credentials`);return response.data;},deployAttendee:async id=>{const response=await apiClient.post(`/api/attendees/${id}/deploy`);return response.data;},destroyAttendeeResources:async id=>{const response=await apiClient.post(`/api/attendees/${id}/destroy`);return response.data;}};// Deployment API\nexport const deploymentApi={getDeploymentLog:async id=>{const response=await apiClient.get(`/api/deployments/${id}`);return response.data;},getAttendeeDeploymentLogs:async attendeeId=>{const response=await apiClient.get(`/api/deployments/attendee/${attendeeId}`);return response.data;},getWorkshopDeploymentLogs:async workshopId=>{const response=await apiClient.get(`/api/deployments/workshop/${workshopId}`);return response.data;}};// Settings API\nexport const settingsApi={getLoginPrefixConfig:async()=>{const response=await apiClient.get('/api/settings/login-prefix');return response.data;},setLoginPrefixConfig:async config=>{await apiClient.post('/api/settings/login-prefix',config);}};// Health API\nexport const healthApi={healthCheck:async()=>{const response=await apiClient.get('/health');return response.data;},detailedHealthCheck:async()=>{const response=await apiClient.get('/health/detailed');return response.data;}};export default apiClient;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}