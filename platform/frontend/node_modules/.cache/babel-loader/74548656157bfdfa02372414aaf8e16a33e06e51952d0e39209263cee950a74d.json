{"ast":null,"code":"/**\n * useConfirmDialog hook\n * Custom hook for managing ConfirmDialog state and rendering\n */import React,{useState,useCallback}from'react';import ConfirmDialog from'../components/ConfirmDialog';import{jsx as _jsx}from\"react/jsx-runtime\";const useConfirmDialog=()=>{const[isOpen,setIsOpen]=useState(false);const[config,setConfig]=useState(null);const showConfirmDialog=useCallback(dialogConfig=>{setConfig(dialogConfig);setIsOpen(true);},[]);const hideConfirmDialog=useCallback(()=>{setIsOpen(false);// Clear config after animation completes\nsetTimeout(()=>setConfig(null),300);},[]);const ConfirmDialogComponent=useCallback(()=>{if(!config)return null;return/*#__PURE__*/_jsx(ConfirmDialog,{...config,isOpen:isOpen,onClose:hideConfirmDialog});},[config,isOpen,hideConfirmDialog]);return{isOpen,showConfirmDialog,hideConfirmDialog,ConfirmDialog:ConfirmDialogComponent};};export default useConfirmDialog;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}